{"ast":null,"code":"import { useState } from \"react\";\nexport const useCounters = () => {\n  const [loading, setLoading] = useState(false);\n\n  const addCounter = (values, helper) => {\n    try {\n      const [stepValue, setStepValue] = useState([0]);\n      setLoading(true);\n      stepValue.push(values.stepValue);\n      setStepValue(stepValue);\n    } catch (e) {} finally {\n      setLoading(false);\n      helper.setSubmitting(false);\n    }\n  };\n\n  return {\n    loading,\n    addCounter,\n    stepValue\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/countersLogic.ts"],"names":["useState","useCounters","loading","setLoading","addCounter","values","helper","stepValue","setStepValue","push","e","setSubmitting"],"mappings":"AACA,SAAQA,QAAR,QAAuB,OAAvB;AAIA,OAAO,MAAMC,WAAW,GAAG,MAAiB;AACxC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBH,QAAQ,CAAC,KAAD,CAArC;;AAEA,QAAMI,UAAU,GAAG,CAACC,MAAD,EAAwBC,MAAxB,KAA+D;AAC9E,QAAG;AACC,YAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BR,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAzC;AAEAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,SAAS,CAACE,IAAV,CAAeJ,MAAM,CAACE,SAAtB;AACAC,MAAAA,YAAY,CAACD,SAAD,CAAZ;AAEH,KAPD,CAQA,OAAMG,CAAN,EAAQ,CACP,CATD,SASQ;AACJP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAG,MAAAA,MAAM,CAACK,aAAP,CAAqB,KAArB;AACH;AACJ,GAdD;;AAgBA,SAAM;AAACT,IAAAA,OAAD;AAASE,IAAAA,UAAT;AAAoBG,IAAAA;AAApB,GAAN;AACH,CApBM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState} from \"react\";\n\n\n\nexport const useCounters = ():UseCounters =>{\n    const [loading,setLoading] = useState(false);\n\n    const addCounter = (values: stepValueForm, helper: FormikHelpers<stepValueForm>)=>{\n        try{\n            const [stepValue,setStepValue] = useState([0]);\n\n            setLoading(true);\n            stepValue.push(values.stepValue);\n            setStepValue(stepValue);\n\n        }\n        catch(e){\n        }finally{\n            setLoading(false);\n            helper.setSubmitting(false);\n        }\n    }\n\n    return{loading,addCounter,stepValue}\n}\nexport interface stepValueForm { /// form inputs types\n    stepValue : number;\n}\ninterface UseCounters { /// useCounters hook output type\n    loading :boolean;\n    addCounter : (values: stepValueForm, helper: FormikHelpers<stepValueForm>)=>void;\n    stepValue : number[];\n}"]},"metadata":{},"sourceType":"module"}