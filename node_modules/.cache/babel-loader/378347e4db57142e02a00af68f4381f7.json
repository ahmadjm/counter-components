{"ast":null,"code":"import React from\"react\";import{Card,Button}from'antd';import{CounterWrapper}from\"../AppStyled\";import{useCounterLogic}from\"./counterLogic\";/// importing counter hook \nexport var Counter=function Counter(props){var step=props.step,id=props.id;/// destructing props and catching step value\nvar _useCounterLogic=useCounterLogic(step),startToCount=_useCounterLogic.startToCount,counter=_useCounterLogic.counter;/// our hook to get the function and counter value \nreturn/*#__PURE__*/React.createElement(CounterWrapper,null,/*#__PURE__*/React.createElement(Card,{title:\"Step \"+(id+1)},/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"p\",null,counter),/*#__PURE__*/React.createElement(Button,{danger:true,type:\"primary\",block:true,onClick:function onClick(){return startToCount();}},\"Run\"))));};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/counters/src/components/counter.tsx"],"names":["React","Card","Button","CounterWrapper","useCounterLogic","Counter","props","step","id","startToCount","counter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,MAAf,KAA4B,MAA5B,CACA,OAAQC,cAAR,KAA6B,cAA7B,CACA,OAAQC,eAAR,KAA8B,gBAA9B,CAA+C;AAG/C,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAmB,IAC/BC,CAAAA,IAD+B,CACpBD,KADoB,CAC/BC,IAD+B,CAC1BC,EAD0B,CACpBF,KADoB,CAC1BE,EAD0B,CACb;AADa,qBAERJ,eAAe,CAACG,IAAD,CAFP,CAE/BE,YAF+B,kBAE/BA,YAF+B,CAElBC,OAFkB,kBAElBA,OAFkB,CAEe;AACrD,mBACI,oBAAC,cAAD,mBACI,oBAAC,IAAD,EAAM,KAAK,CAAE,SAAWF,EAAE,CAAC,CAAd,CAAb,eACI,gDACI,6BAAIE,OAAJ,CADJ,cAEI,oBAAC,MAAD,EAAQ,MAAM,KAAd,CAAe,IAAI,CAAC,SAApB,CAA8B,KAAK,KAAnC,CAAqC,OAAO,CAAE,yBAAID,CAAAA,YAAY,EAAhB,EAA9C,QAFJ,CADJ,CADJ,CADJ,CAUH,CAbM","sourcesContent":["import React from \"react\";\nimport { Card ,Button} from 'antd';\nimport {CounterWrapper} from \"../AppStyled\";\nimport {useCounterLogic} from \"./counterLogic\";/// importing counter hook \n\n\nexport const Counter = (props:propsType)=>{\n    const {step,id} = props; /// destructing props and catching step value\n    const {startToCount,counter} =useCounterLogic(step); /// our hook to get the function and counter value \n    return(\n        <CounterWrapper>\n            <Card title={\"Step \" + (id+1)} >\n                <section>\n                    <p>{counter}</p>   \n                    <Button danger type=\"primary\" block  onClick={()=>startToCount()} >Run</Button>\n                </section>\n            </Card>\n        </CounterWrapper>   \n    )\n}\n\ninterface propsType {\n    step :number;\n    id :number;\n}"]},"metadata":{},"sourceType":"module"}