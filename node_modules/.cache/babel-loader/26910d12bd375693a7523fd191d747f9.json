{"ast":null,"code":"import { useState } from \"react\";\nexport const useCounters = () => {\n  const [loading, setLoading] = useState(false);\n  const [stepValue, setStepValue] = useState([]);\n\n  const addCounter = (values, helper) => {\n    try {\n      setLoading(true);\n      setStepValue(stepValue.push(values.stepValue));\n    } catch (e) {} finally {\n      setLoading(false);\n      helper.setSubmitting(false);\n    }\n  };\n\n  return {\n    loading,\n    addCounter,\n    stepValue\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useState","useCounters","loading","setLoading","stepValue","setStepValue","addCounter","values","helper","push","e","setSubmitting"],"mappings":"AACA,SAAQA,QAAR,QAAuB,OAAvB;AAIA,OAAO,MAAMC,WAAW,GAAG,MAAiB;AACxC,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBH,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACI,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,EAAD,CAAzC;;AAEA,QAAMM,UAAU,GAAG,CAACC,MAAD,EAAwBC,MAAxB,KAA+D;AAC9E,QAAG;AACCL,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEAE,MAAAA,YAAY,CAACD,SAAS,CAACK,IAAV,CAAeF,MAAM,CAACH,SAAtB,CAAD,CAAZ;AAEH,KALD,CAMA,OAAMM,CAAN,EAAQ,CACP,CAPD,SAOQ;AACJP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,MAAM,CAACG,aAAP,CAAqB,KAArB;AACH;AACJ,GAZD;;AAcA,SAAM;AAACT,IAAAA,OAAD;AAASI,IAAAA,UAAT;AAAoBF,IAAAA;AAApB,GAAN;AACH,CAnBM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState} from \"react\";\n\n\n\nexport const useCounters = ():UseCounters =>{\n    const [loading,setLoading] = useState(false);\n    const [stepValue,setStepValue] = useState([]);\n\n    const addCounter = (values: stepValueForm, helper: FormikHelpers<stepValueForm>)=>{\n        try{\n            setLoading(true);\n\n            setStepValue(stepValue.push(values.stepValue));\n\n        }\n        catch(e){\n        }finally{\n            setLoading(false);\n            helper.setSubmitting(false);\n        }\n    }\n\n    return{loading,addCounter,stepValue}\n}\nexport interface stepValueForm { /// form inputs types\n    stepValue : number;\n}\ninterface UseCounters { /// useCounters hook output type\n    loading :boolean;\n    addCounter : (values: stepValueForm, helper: FormikHelpers<stepValueForm>)=>void;\n    stepValue : number;\n}"]},"metadata":{},"sourceType":"module"}