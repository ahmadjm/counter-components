{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport const useCounterLogic = step => {\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const id = setInterval(() => {\n      startToCount(); // ✅ This doesn't depend on `count` variable outside\n    }, 1000);\n    return () => clearInterval(id);\n  }, []); // ✅ Our effect doesn't use any variables in the component scope\n\n  const startToCount = () => {\n    setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()));\n  };\n\n  return {\n    startToCount,\n    counter\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useState","useEffect","useCounterLogic","step","counter","setCounter","id","setInterval","startToCount","clearInterval","parseFloat","toString"],"mappings":"AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAA4B;AACvD,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,CAAD,CAArC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMK,EAAE,GAAGC,WAAW,CAAC,MAAM;AACzBC,MAAAA,YAAY,GADa,CACX;AACjB,KAFqB,EAEnB,IAFmB,CAAtB;AAGA,WAAO,MAAMC,aAAa,CAACH,EAAD,CAA1B;AACD,GALM,EAKJ,EALI,CAAT,CAJuD,CAS7C;;AAEV,QAAME,YAAY,GAAG,MAAI;AACjBH,IAAAA,UAAU,CAACK,UAAU,CAACN,OAAO,CAACO,QAAR,EAAD,CAAV,GAAiCD,UAAU,CAACP,IAAI,CAACQ,QAAL,EAAD,CAA5C,CAAV;AACP,GAFD;;AAGA,SAAO;AAACH,IAAAA,YAAD;AAAcJ,IAAAA;AAAd,GAAP;AACH,CAfM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState,useEffect} from \"react\";\n\nexport const useCounterLogic = (step:number):UseCounter  =>{\n    const [counter,setCounter] = useState(0);\n    \n  \n    useEffect(() => {\n        const id = setInterval(() => {\n            startToCount()// ✅ This doesn't depend on `count` variable outside\n        }, 1000);\n        return () => clearInterval(id);\n      }, []); // ✅ Our effect doesn't use any variables in the component scope\n\n    const startToCount = ()=>{\n            setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()))        \n    }\n    return {startToCount,counter}\n}\n\ninterface UseCounter {\n    counter:number;\n    startToCount : ()=>void;\n}\n"]},"metadata":{},"sourceType":"module"}