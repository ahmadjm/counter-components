{"ast":null,"code":"export const useCounterLogic = (step, counter, setCounter) => {\n  const startToCount = () => {\n    const id = setInterval(() => {\n      setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()));\n    }, 1000);\n  };\n\n  return {\n    startToCount\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useCounterLogic","step","counter","setCounter","startToCount","id","setInterval","parseFloat","toString"],"mappings":"AAGA,OAAO,MAAMA,eAAe,GAAG,CAACC,IAAD,EAAaC,OAAb,EAA4BC,UAA5B,KAA4E;AAKvG,QAAMC,YAAY,GAAG,MAAI;AACrB,UAAMC,EAAE,GAAGC,WAAW,CAAC,MAAM;AACzBH,MAAAA,UAAU,CAACI,UAAU,CAACL,OAAO,CAACM,QAAR,EAAD,CAAV,GAAiCD,UAAU,CAACN,IAAI,CAACO,QAAL,EAAD,CAA5C,CAAV;AACH,KAFqB,EAEnB,IAFmB,CAAtB;AAGH,GAJD;;AAKA,SAAO;AAACJ,IAAAA;AAAD,GAAP;AACH,CAXM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState,useEffect} from \"react\";\n\nexport const useCounterLogic = (step:number,counter:number,setCounter:(count :number)=>void):UseCounter  =>{\n    \n  \n\n\n    const startToCount = ()=>{\n        const id = setInterval(() => {\n            setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()))         \n        }, 1000);\n    }\n    return {startToCount}\n}\n\ninterface UseCounter {\n    startToCount : ()=>void;\n}\n"]},"metadata":{},"sourceType":"module"}