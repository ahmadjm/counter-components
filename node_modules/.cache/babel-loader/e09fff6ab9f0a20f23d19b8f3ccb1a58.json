{"ast":null,"code":"export const useCounterLogic = (step, counter, setCounter) => {\n  const startToCount = () => {\n    setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()));\n  };\n\n  return {\n    startToCount,\n    counter\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useCounterLogic","step","counter","setCounter","startToCount","parseFloat","toString"],"mappings":"AAGA,OAAO,MAAMA,eAAe,GAAG,CAACC,IAAD,EAAaC,OAAb,EAA4BC,UAA5B,KAA4E;AAKvG,QAAMC,YAAY,GAAG,MAAI;AACjBD,IAAAA,UAAU,CAACE,UAAU,CAACH,OAAO,CAACI,QAAR,EAAD,CAAV,GAAiCD,UAAU,CAACJ,IAAI,CAACK,QAAL,EAAD,CAA5C,CAAV;AACP,GAFD;;AAGA,SAAO;AAACF,IAAAA,YAAD;AAAcF,IAAAA;AAAd,GAAP;AACH,CATM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState,useEffect} from \"react\";\n\nexport const useCounterLogic = (step:number,counter:number,setCounter:(count :number)=>void):UseCounter  =>{\n    \n  \n \n\n    const startToCount = ()=>{\n            setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()))        \n    }\n    return {startToCount,counter}\n}\n\ninterface UseCounter {\n    counter:number;\n    startToCount : ()=>void;\n}\n"]},"metadata":{},"sourceType":"module"}