{"ast":null,"code":"import { useEffect } from \"react\";\nexport const useCounterLogic = step => {\n  useEffect(() => {\n    startToCount();\n  }, [counter]); // Only re-run the effect if counter changes\n\n  const startToCount = () => {\n    setTimeout(setCounter(parseFloat(counter.toString()) + parseFloat(step.toString())), 3000);\n  };\n\n  return {\n    startToCount,\n    counter\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useEffect","useCounterLogic","step","startToCount","counter","setTimeout","setCounter","parseFloat","toString"],"mappings":"AACA,SAAiBA,SAAjB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAA4B;AAEvDF,EAAAA,SAAS,CAAC,MAAM;AACbG,IAAAA,YAAY;AACd,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT,CAFuD,CAIxC;;AAEf,QAAMD,YAAY,GAAG,MAAI;AACrBE,IAAAA,UAAU,CACNC,UAAU,CAACC,UAAU,CAACH,OAAO,CAACI,QAAR,EAAD,CAAV,GAAiCD,UAAU,CAACL,IAAI,CAACM,QAAL,EAAD,CAA5C,CADJ,EAEA,IAFA,CAAV;AAIH,GALD;;AAMA,SAAO;AAACL,IAAAA,YAAD;AAAcC,IAAAA;AAAd,GAAP;AACH,CAbM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState,useEffect} from \"react\";\n\nexport const useCounterLogic = (step:number):UseCounter  =>{\n    \n    useEffect(() => {\n       startToCount();\n    }, [counter]); // Only re-run the effect if counter changes\n    \n    const startToCount = ()=>{\n        setTimeout(\n            setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()))\n                , 3000);\n        \n    }\n    return {startToCount,counter}\n}\n\ninterface UseCounter {\n    counter:number;\n    startToCount : ()=>void;\n}"]},"metadata":{},"sourceType":"module"}