{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport const useCounterLogic = step => {\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    console.log(1);\n  }, [counter]); // Only re-run the effect if count changes\n\n  const startToCount = () => {\n    setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()));\n  };\n\n  return {\n    startToCount,\n    counter\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useState","useEffect","useCounterLogic","step","counter","setCounter","console","log","startToCount","parseFloat","toString"],"mappings":"AACA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAA4B;AACvD,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,CAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACH,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT,CAHuD,CAKxC;;AACf,QAAMI,YAAY,GAAG,MAAI;AACrBH,IAAAA,UAAU,CAACI,UAAU,CAACL,OAAO,CAACM,QAAR,EAAD,CAAV,GAAiCD,UAAU,CAACN,IAAI,CAACO,QAAL,EAAD,CAA5C,CAAV;AACH,GAFD;;AAGA,SAAO;AAACF,IAAAA,YAAD;AAAcJ,IAAAA;AAAd,GAAP;AACH,CAVM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState,useEffect} from \"react\";\n\nexport const useCounterLogic = (step:number):UseCounter  =>{\n    const [counter,setCounter] = useState(0);\n    \n    useEffect(() => {\n        console.log(1);\n    }, [counter]); // Only re-run the effect if count changes\n    const startToCount = ()=>{\n        setCounter(parseFloat(counter.toString()) + parseFloat(step.toString()))\n    }\n    return {startToCount,counter}\n}\n\ninterface UseCounter {\n    counter:number;\n    startToCount : ()=>void;\n}"]},"metadata":{},"sourceType":"module"}