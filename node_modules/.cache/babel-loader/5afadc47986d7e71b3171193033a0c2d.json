{"ast":null,"code":"import { useState } from \"react\";\nexport const useCounterLogic = step => {\n  const [counter, setCounter] = useState(0);\n\n  const startToCount = () => {\n    setCounter(counter + step);\n  };\n\n  return {\n    startToCount,\n    counter\n  };\n};","map":{"version":3,"sources":["/home/ahmad/projects/Yasna Team/counters/src/components/counterLogic.ts"],"names":["useState","useCounterLogic","step","counter","setCounter","startToCount"],"mappings":"AACA,SAAQA,QAAR,QAAiC,OAAjC;AAEA,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAA4B;AACvD,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBJ,QAAQ,CAAC,CAAD,CAArC;;AAIA,QAAMK,YAAY,GAAG,MAAI;AACrBD,IAAAA,UAAU,CAACD,OAAO,GAACD,IAAT,CAAV;AACH,GAFD;;AAGA,SAAO;AAACG,IAAAA,YAAD;AAAcF,IAAAA;AAAd,GAAP;AACH,CATM","sourcesContent":["import {FormikHelpers} from \"formik\";\nimport {useState,useEffect} from \"react\";\n\nexport const useCounterLogic = (step:number):UseCounter  =>{\n    const [counter,setCounter] = useState(0);\n    \n    \n\n    const startToCount = ()=>{\n        setCounter(counter+step)\n    }\n    return {startToCount,counter}\n}\n\ninterface UseCounter {\n    counter:number;\n    startToCount : ()=>void;\n}"]},"metadata":{},"sourceType":"module"}